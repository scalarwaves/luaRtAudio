PROJECT(luaRtAudio)
cmake_minimum_required(VERSION 2.8)

#first take care of RtAudio CMake
if (WIN32)
	set(AUDIO_WINDOWS_DS ON CACHE INTERNAL "use windows ds!")
	set(AUDIO_WINDOWS_ASIO ON CACHE INTERNAL "use windows asio!")
	set(AUDIO_WINDOWS_WASAPI ON CACHE INTERNAL "use windows wasapi!")
endif(WIN32)

if (APPLE)
    set(AUDIO_OSX_CORE ON CACHE INTERNAL "use OSX_CORE!")
endif (APPLE)

if (UNIX AND NOT APPLE)
	set(AUDIO_LINUX_OSS ON CACHE INTERNAL "AUDIO_LINUX_OSS!")
	set(AUDIO_LINUX_ALSA ON CACHE INTERNAL "AUDIO_LINUX_ALSA!")
	set(AUDIO_LINUX_PULSE ON CACHE INTERNAL "AUDIO_LINUX_PULSE!")
	set(AUDIO_UNIX_JACK ON CACHE INTERNAL "AUDIO_UNIX_JACK!")
endif ()

set(BUILD_TESTING OFF CACHE INTERNAL "dont build tests!")
add_subdirectory(RtAudioORIG)

#now luaRtAudio
get_directory_property(LINKLIBS DIRECTORY RtAudioORIG DEFINITION LINKLIBS)
add_definitions(-DLUA_BUILD_AS_DLL -DLUA_LIB)
if(LIBSNDFILE_INCLUDE_DIR)
	add_definitions(-DUSE_SNDFILE)
	INCLUDE_DIRECTORIES(${LIBSNDFILE_INCLUDE_DIR})
	set(LINKSNDFILE ${LIBSNDFILE_LIB})
endif()
INCLUDE_DIRECTORIES(${LUA_INCLUDE_DIR})
INCLUDE_DIRECTORIES(RtAudioORIG)
ADD_LIBRARY(luaRtAudio SHARED luaRtAudio/luaRtAudio.cpp)
set_target_properties(luaRtAudio PROPERTIES PREFIX "" OUTPUT_NAME core)

TARGET_LINK_LIBRARIES(luaRtAudio ${LUA_LIBRARY} rtaudio_static ${LINKLIBS} ${LINKSNDFILE})

install(TARGETS luaRtAudio DESTINATION ${INSTALL_CMOD}/RtAudio)
INSTALL(FILES luaRtAudio/RtAudio.lua DESTINATION ${INSTALL_LMOD})
INSTALL (FILES ${LINKSNDFILE} DESTINATION ${INSTALL_CMOD})
